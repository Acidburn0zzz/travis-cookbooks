env: <%= @worker[:env] %>
linux:
<% if @queue -%>
  queue: <%= @queue %>
<% end -%>
  host: <%= @hostname %>
  log_level: <%= @worker[:log_level] %>
  amqp:
  <% @amqp.each do |key, value| -%>
    <%= key %>: <%= value %>
  <% end %>
  vms:
    provider: <%= @worker[:provider] %>
    count: <%= @vms || @worker[:vms] %>
  docker:
    private_key_path: <%= @docker[:private_key_path] %>
  librato:
    email: <%= @librato[:email] %>
    token: <%= @librato[:api_token] %>
  language_mappings:
    clojure: jvm
    scala: jvm
    groovy: jvm
    java: jvm
<% if @worker[:template_override] -%>
  template_override: <%= @worker[:template_override] %>
<% end -%>
<% if @worker[:timeouts] -%>
  timeouts:
  <% @worker[:timeouts].each do |timeout, value| -%>
    <%= timeout -%>: <%= value %>
  <% end -%>
<% end -%>
<% if @worker[:shutdown_timeout] -%>
  shutdown_timeout: <%= @worker[:shutdown_timeout] %>
<% end -%>
<% if @worker[:hosts] && @worker[:hosts].any? -%>
  hosts:
  <% @worker[:hosts].each do |name, host| %>
    <%= name -%>: "<%= host %>"
  <% end %>
<% end -%>
<% if @worker[:cache_options] && @worker[:cache_options][:s3].any? -%>
  cache_options:
    type: s3
    s3:
      bucket: <%= @worker[:cache_options][:s3][:bucket] %>
      access_key_id: <%= @worker[:cache_options][:s3][:access_key_id] %>
      secret_access_key: <%= @worker[:cache_options][:s3][:secret_access_key] %>
    fetch_timeout: <%= 1200 %>
    push_timeout: <%= 1200 + @worker[:timeouts][:hard_limit] %>
<% end -%>
<% if @worker[:paranoid] -%>
  paranoid: <%= @worker[:paranoid] %>
<% end -%>
<% if @worker[:skip_resolv_updates] -%>
  skip_resolv_updates: <%= @worker[:skip_resolv_updates] %>
<% end -%>
<% if @worker[:skip_etc_hosts_fix] -%>
  skip_etc_hosts_fix: <%= @worker[:skip_etc_hosts_fix] %>
<% end -%>
